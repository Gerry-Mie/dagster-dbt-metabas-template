version: '3.9'

services:
  postgres:
    image: postgres:latest
    container_name: zen-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - zen-network
    volumes:
      - postgres_data:/var/lib/postgresql/data


  dagster:
    build:
      context: .
    container_name: zen-dagster
    environment:
      DAGSTER_HOME: /opt/dagster/dagster_home
    volumes:
      - ./local/dagster/home:/opt/dagster/dagster_home
      - ./dagster:/opt/dagster/app
    ports:
      - "${DAGSTER_PORT}:3000"
    depends_on:
      - postgres
    networks:
      - zen-network
    working_dir: /opt/dagster/app
    entrypoint: ["dagster", "dev", "--host", "0.0.0.0"]
#    entrypoint: ["tail", "-f", "/dev/null"]


  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.4.7
    container_name: zen-dbt
    depends_on:
      - postgres
    volumes:
      - ./local/dbt/profile:/root/.dbt
      - ./dbt:/usr/app/tick
    working_dir: /usr/app
    networks:
      - zen-network
    entrypoint: ["tail", "-f", "/dev/null"]


  metabase:
    image: metabase/metabase:latest
    container_name: zen-metabase
    volumes:
      - ./local/metabase/urandom:/dev/random:ro
      - ./local/metabase/data:/metabase-data
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${POSTGRES_DB}
      MB_DB_PORT: 5432
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: postgres
    ports:
      - "${METABASE_PORT}:3000"
    networks:
      - zen-network

volumes:
  postgres_data:

networks:
  zen-network:
    driver: bridge